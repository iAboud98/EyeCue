{"ast":null,"code":"var _jsxFileName = \"/Users/aboudfialah/Desktop/ProjectB/frontend/src/components/cameraCapture/CameraCapture.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nimport \"./cameraCapture.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API = process.env.REACT_APP_API_URL || \"\";\nconst STUDENT_ID = \"12345\"; // ðŸ”¹ You can make this dynamic later\n\nconst CameraCapture = () => {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: {\n        facingMode: \"user\"\n      }\n    }).then(stream => {\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n      }\n    }).catch(err => {\n      console.error(\"Camera access error:\", err);\n    });\n  }, []);\n  useEffect(() => {\n    const captureFrame = async () => {\n      const video = videoRef.current;\n      const canvas = canvasRef.current;\n      if (!video || !canvas) return;\n      const context = canvas.getContext(\"2d\");\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n      const frame = canvas.toDataURL(\"image/jpeg\");\n      try {\n        if (API) {\n          const response = await fetch(API, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              student_id: STUDENT_ID,\n              // ðŸ”¹ Add ID here\n              image: frame\n            })\n          });\n          if (!response.ok) throw new Error(\"Server error\");\n          console.log(\"Frame sent to API\");\n        } else {\n          throw new Error(\"No API set\");\n        }\n      } catch (err) {\n        console.warn(\"API failed. Frame dropped.\");\n      }\n    };\n    const interval = setInterval(() => {\n      for (let i = 0; i < 4; i++) {\n        setTimeout(captureFrame, i * 1000);\n      }\n    }, 200);\n    return () => clearInterval(interval);\n  }, [videoRef, canvasRef]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Live Camera Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        autoPlay: true,\n        playsInline: true,\n        muted: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          display: \"none\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(CameraCapture, \"ak7+uYfCLCD14UmZDNefIcFbPqc=\");\n_c = CameraCapture;\nexport default CameraCapture;\nvar _c;\n$RefreshReg$(_c, \"CameraCapture\");","map":{"version":3,"names":["useEffect","useRef","jsxDEV","_jsxDEV","API","process","env","REACT_APP_API_URL","STUDENT_ID","CameraCapture","_s","videoRef","canvasRef","navigator","mediaDevices","getUserMedia","video","facingMode","then","stream","current","srcObject","catch","err","console","error","captureFrame","canvas","context","getContext","width","videoWidth","height","videoHeight","drawImage","frame","toDataURL","response","fetch","method","headers","body","JSON","stringify","student_id","image","ok","Error","log","warn","interval","setInterval","i","setTimeout","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","playsInline","muted","style","display","_c","$RefreshReg$"],"sources":["/Users/aboudfialah/Desktop/ProjectB/frontend/src/components/cameraCapture/CameraCapture.jsx"],"sourcesContent":["import { useEffect, useRef } from \"react\";\r\nimport \"./cameraCapture.css\";\r\n\r\nconst API = process.env.REACT_APP_API_URL || \"\";\r\nconst STUDENT_ID = \"12345\"; // ðŸ”¹ You can make this dynamic later\r\n\r\nconst CameraCapture = () => {\r\n    const videoRef = useRef(null);\r\n    const canvasRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        navigator.mediaDevices.getUserMedia({ video: { facingMode: \"user\" } })\r\n            .then((stream) => {\r\n                if (videoRef.current) {\r\n                    videoRef.current.srcObject = stream;\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.error(\"Camera access error:\", err);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const captureFrame = async () => {\r\n            const video = videoRef.current;\r\n            const canvas = canvasRef.current;\r\n            if (!video || !canvas) return;\r\n\r\n            const context = canvas.getContext(\"2d\");\r\n            canvas.width = video.videoWidth;\r\n            canvas.height = video.videoHeight;\r\n            context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n\r\n            const frame = canvas.toDataURL(\"image/jpeg\");\r\n\r\n            try {\r\n                if (API) {\r\n                    const response = await fetch(API, {\r\n                        method: \"POST\",\r\n                        headers: { \"Content-Type\": \"application/json\" },\r\n                        body: JSON.stringify({\r\n                            student_id: STUDENT_ID, // ðŸ”¹ Add ID here\r\n                            image: frame\r\n                        }),\r\n                    });\r\n                    if (!response.ok) throw new Error(\"Server error\");\r\n                    console.log(\"Frame sent to API\");\r\n                } else {\r\n                    throw new Error(\"No API set\");\r\n                }\r\n            } catch (err) {\r\n                console.warn(\"API failed. Frame dropped.\");\r\n            }\r\n        };\r\n\r\n        const interval = setInterval(() => {\r\n            for (let i = 0; i < 4; i++) {\r\n                setTimeout(captureFrame, i * 1000);\r\n            }\r\n        }, 200);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [videoRef, canvasRef]);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>Live Camera Feed</h2>\r\n            <div className=\"video-wrapper\">\r\n                <video ref={videoRef} autoPlay playsInline muted />\r\n                <canvas ref={canvasRef} style={{ display: \"none\" }} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CameraCapture;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}